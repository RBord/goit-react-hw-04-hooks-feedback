{"version":3,"sources":["Components/Section/Section.jsx","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Statistics/Statistics.jsx","Components/Notification/Notification.jsx","Components/App/App.jsx","index.js"],"names":["Title","styled","h1","Section","title","children","propTypes","PropType","string","isRequired","Container","div","Button","button","FeedbackOptions","incrementGood","incrementNeutral","incrementBad","type","onClick","name","Div","TextTotal","p","Statistics","good","neutral","bad","total","positivePercentage","Text","Notification","message","App","useState","setGood","setNeutral","setBad","setTotal","percentage","setPercentage","onHandleClick","evt","target","prevState","useEffect","Math","floor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAIMA,EAAQC,IAAOC,GAAV,iDASIC,EANC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACZ,oCACI,cAACL,EAAD,UAAQI,IACPC,MAKTL,EAAMM,UAAY,CACdF,MAAOG,IAASC,OAAOC,YCXpB,I,MAAMC,EAAYT,IAAOU,IAAV,gDAGhBC,EAASX,IAAOY,OAAV,oIAiBGC,EAXS,SAAC,GAAD,IAAEC,EAAF,EAAEA,cAAeC,EAAjB,EAAiBA,iBAAkBC,EAAnC,EAAmCA,aAAnC,OACpB,mCACI,cAAC,EAAD,CAASb,MAAM,wBAAf,SACI,eAACM,EAAD,WACI,cAACE,EAAD,CAAQM,KAAK,SAASC,QAASJ,EAAeK,KAAK,OAAnD,kBACA,cAACR,EAAD,CAAQM,KAAK,SAASC,QAASH,EAAkBI,KAAK,UAAtD,qBACA,cAACR,EAAD,CAAQM,KAAK,SAASC,QAASF,EAAcG,KAAK,MAAlD,yBCfVC,EAAMpB,IAAOU,IAAV,4HAMHW,EAAYrB,IAAOsB,EAAV,gGAqBAC,EAhBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACf,mCACI,cAAC,EAAD,CAASzB,MAAM,aAAf,SACK,eAACM,EAAD,WACG,eAACW,EAAD,WACI,uCAAUI,KACV,0CAAaC,KACb,sCAASC,QAEb,eAACL,EAAD,qBAAmBM,KACnB,oDAAuBC,EAAvB,gBCtBVC,EAAO7B,IAAOsB,EAAV,iDAMKQ,EAHM,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OACjB,cAACF,EAAD,UAAOE,KAIXF,EAAKxB,UAAY,CACb0B,QAASzB,IAASC,OAAOC,YCiDdwB,MAxDf,WAEI,MAAwBC,mBAAS,GAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBU,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOP,EAAP,KAAYU,EAAZ,KACA,EAA0BH,mBAAS,GAAnC,mBAAON,EAAP,KAAcU,EAAd,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEMC,EAAgB,SAACC,GACnB,OAAQA,EAAIC,OAAOvB,MACf,IAAK,OACDe,GAAQ,SAAAS,GAAS,OAAIA,EAAY,KACjC,MACJ,IAAK,UACDR,GAAW,SAAAQ,GAAS,OAAIA,EAAY,KACpC,MACJ,IAAK,MACDP,GAAO,SAAAO,GAAS,OAAIA,EAAY,KAChC,MAEJ,QACI,SAcZ,OAVAC,qBAAU,WAENP,EADcb,EAAOC,EAAUC,KAEhC,CAACF,EAAMC,EAASC,IAEnBkB,qBAAU,WACN,IAAMN,EAAaO,KAAKC,MAAOtB,EAAOG,EAAS,KAC/CY,EAAcD,KACf,CAACd,EAAMG,IAGN,qCACI,cAAC,EAAD,CACIb,cAAe0B,EACfzB,iBAAkByB,EAClBxB,aAAcwB,IAEjBb,EAAQ,EACH,cAAC,EAAD,CACFH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBU,IAElB,cAAC,EAAD,CAAcP,QAAQ,0B,MCnDxCgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.96ce59d3.chunk.js","sourcesContent":["import React from 'react';\nimport PropType from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst Title = styled.h1`\ntext-align: center;\n`\nconst Section = ({title, children}) => (\n    <section>\n        <Title>{title}</Title>\n        {children}\n    </section>\n)\nexport default Section;\n\nTitle.propTypes = {\n    title: PropType.string.isRequired,\n}\n\n","import React from 'react';\nimport PropType from 'prop-types';\nimport Section from '../Section/Section';\nimport styled from '@emotion/styled';\n\nexport const Container = styled.div`\ntext-align:center;\n`\nconst Button = styled.button`\n    margin-left: 20px;\n    border-radius: 10px;\n    border: 1px solid black;\n    padding: 5px 10px;\n`\nconst FeedbackOptions = ({incrementGood, incrementNeutral, incrementBad }) => (\n    <>\n        <Section title='Please leave feedback'>\n            <Container>\n                <Button type='button' onClick={incrementGood} name='good'>Good</Button>\n                <Button type='button' onClick={incrementNeutral} name='neutral'>Neutral</Button>\n                <Button type='button' onClick={incrementBad} name='bad'>Bad</Button>\n            </Container>\n        </Section>\n    </>\n)\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n    incrementGood: PropType.func.isRequired,\n    incrementNeutral: PropType.func.isRequired,\n    incrementBad: PropType.func.isRequired,\n}","import React from \"react\";\nimport PropType from 'prop-types';\nimport styled from \"@emotion/styled\";\nimport Section from \"../Section/Section\";\nimport { Container } from \"../FeedbackOptions/FeedbackOptions\";\nconst Div = styled.div`\n    display: flex;\n    justify-content: space-evenly;\n    width: 400px;\n    margin: 0 auto;\n`\nconst TextTotal = styled.p`\nborder: 2px solid red;\ndisplay: inline-block;\npadding: 5px 15px;\n`;\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n    <>\n        <Section title='Statistics'>\n             <Container>\n                <Div>\n                    <p>Good: {good}</p>\n                    <p>Neutral: {neutral}</p>\n                    <p>Bad: {bad}</p>\n                </Div>\n                <TextTotal>Total: {total}</TextTotal>\n                <p>Positive feedback: {positivePercentage} %</p>\n            </Container>\n        </Section>\n    </>\n)\n    \nexport default Statistics;\n\nStatistics.propTypes = {\n    good: PropType.number.isRequired,\n    bad: PropType.number.isRequired,\n    neutral: PropType.number.isRequired,\n    total: PropType.number.isRequired,\n    positivePercentage:  PropType.number.isRequired,\n}","import React from 'react';\nimport PropType from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst Text = styled.p`\ntext-align: center;\n`\nconst Notification = ({message}) => (\n    <Text>{message}</Text>\n)\nexport default Notification;\n\nText.propTypes = {\n    message: PropType.string.isRequired,\n}","import {useState, useEffect} from 'react';\n\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Statistics from '../Statistics/Statistics';\nimport Notification from '../Notification/Notification';\n\nfunction App () {\n\n    const [good, setGood] = useState(0);\n    const [neutral, setNeutral] = useState(0);\n    const [bad, setBad] = useState(0);\n    const [total, setTotal] = useState(0);\n    const [percentage, setPercentage] = useState(0);\n\n    const onHandleClick = (evt) => {\n        switch (evt.target.name) {\n            case 'good':\n                setGood(prevState => prevState + 1)\n                break;\n            case 'neutral':\n                setNeutral(prevState => prevState + 1)\n                break;\n            case 'bad':\n                setBad(prevState => prevState + 1)\n                break;\n            \n            default:\n                return;\n        }\n    }\n\n    useEffect(() => {\n        const total = good + neutral + bad;\n        setTotal(total)\n    }, [good, neutral, bad])\n\n    useEffect(() => {\n        const percentage = Math.floor((good / total) * 100);\n        setPercentage(percentage)\n    }, [good, total])\n\n    return (\n        <>\n            <FeedbackOptions\n                incrementGood={onHandleClick}\n                incrementNeutral={onHandleClick}\n                incrementBad={onHandleClick}\n            />\n            {total > 0\n                ? <Statistics\n                good={good}\n                neutral={neutral}\n                bad={bad}\n                total={total}\n                positivePercentage={percentage}\n                />\n                : <Notification message='No feedback given'/>\n            }\n        </>\n    )\n    \n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App/App'\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}